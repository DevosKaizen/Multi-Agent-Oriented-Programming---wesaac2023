institution_id : smart_room_inst.


status_functions:

states: play(A,R,G), responsible(G,S), committed(A,Mission,S), done(S,G,A).

constitutive_rules:

/*
   Rules 1-4: Any environmental/organizational circumstance counts as the holding of the property play(Agent,Role,Group).              
              In other words, considering the semantics of Moise, in any circumstance, Agent plays Role in Group.

*/
1: count-as play(pa1,assistant,r1).

2: count-as play(pa2,assistant,r1).

3: count-as play(pa3,assistant,r1).

4: count-as play(rc,controller,r1).


/* 
   Rule 5: if defining what counts as, from the institutional perspective, a well formed group. This constitution is necessary to constitute the commitments 
   
*/
5: count-as responsible(r1,temp_r1)
   while play(Assistant1,assistant,r1)  &  
         play(Assistant2,assistant,r1)  &   
         not(Assistant1==Assistant2) &
         play(Controller,controller,r1).


/* 
   Rules 6-7: the organizational property play(Agent,Role,Group) counts as committed(Agent,Mission,Scheme).
              Considering the Moise semantics, it means that the agent playing a role in a group counts as this
              agent committed with certain mission in some scheme.
*/

6: play(A,assistant,r1)
   count-as committed(A,mVote,temp_r1)
   while responsible(r1,temp_r1).          

7: play(A,controller,r1)
   count-as committed(A,mController,temp_r1)
   while responsible(r1,temp_r1).              

/*
   Rule 8: broadcasting options(_) with any argument counts as the goal options_announced being achieved.

*/

8: count-as done(temp_r1,options_announced,Agent)
    when broadcast(tell,options(_))[sai__agent(Agent)].
 

/*
  Rules 9-11: the institution achieves in a state that holds the property done(Scheme,Goal,Agent)
              when this agent produces an event (e.g. open, vote, close). This event, in JaCaMo, is the execution of an operation 
              of artifact.
              In other words, the execution of an operation leads the institution to a new state.
*/
9: count-as done(temp_r1,voting_open,Agent)
    when open[sai__agent(Agent)].    

10: count-as done(temp_r1,vote_done,Agent)
    when vote(Preference)[sai__agent(Agent)].       


/* Exercise 5.5.3 
   In the current version of the smart-room-inst application, the goal of ending the voting 
   is never achieved even the responsible agent executes the corresponding operation in the voting artifact. 
   Add a new constitutive rule (rule #11) to specify that the execution of the close operation in the voting 
   artifact counts as the the achievement of the voting_closed goal. 
   Use the following template, replacing the elements in <> by the proper identifiers.

11: count-as done(<scheme>,<goal>,Agent)
    when <artifact operation name> [sai__agent(Agent)].

*/


/*
   Notes:

   * Rules 1-5 and 8-11 define freestanding assignments. More details on this point can be found at https://doi.org/10.1007/s10458-017-9379-3

   * This institutional specification includes application-specific elements, such as group and scheme names as well as 
     guidelines for role adoption, mission commitments, goal achievements, etc. Different applications may require different
     specifications.

*/